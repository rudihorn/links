sig count : Comp({Get:Int,Put:(Int) {}-> ()|_}, Int)
fun count() client {
  var n = do Get;
  if (n == 0) n
  else { do Put(n-1); count() }
}

sig evalState : (Comp({Get:s,Put:(s) {}-> () |e}, a), s) {Get{_},Put{_} |e}~> a
fun evalState(m,st0) {
  (handle(m()) {
    case Return(x)      -> fun(_) { x }
    case Get(resume)    -> fun(st) { resume(st)(st) }
    case Put(st,resume) -> fun(_)  { resume(())(st) }
  })(st0)
}

fun run(n) client {
  var r = evalState(count,n);
  ignore $ domSetPropertyFromRef(getNodeById("result"), "value", intToString(r))
}


# Page
fun mainPage(_) {
  page
    <html>
      <body>
        <form l:onsubmit="{run(10^3)}">
          <input type="submit" value="Run" />
          <input type="text" id="result" readonly="readonly" value="" />
        </form>
      </body>
    </html>
}


fun main() {
  addRoute("/", mainPage);
  servePages()
}

main()
