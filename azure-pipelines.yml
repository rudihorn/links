# Azure Pipelines configuration.

resources:
  containers:
    - container: pg11
      image: postgres:11

trigger:
- master

pr:
  autoCancel: true
  branches:
    include:
      - '*'  # must quote since "*" is a YAML reserved character.
pool:
  name: Default

container: 
  image: ocaml/opam2:4.07
  options: "-u 0"

services:
  postgres: pg11
steps:
  - script: |
      printenv
    displayName: Environment

  - script: |
      cat >/tmp/opam  <<-EOF
        #!/bin/bash
        
        sudo -u opam /usr/bin/opam \$@
      EOF
      sudo chmod +x /tmp/opam
      sudo mv /tmp/opam /usr/local/bin/
      ls -lah /usr/bin/opam
      ls -lah /usr/local/bin/
      cat /usr/local/bin/opam
      /usr/local/bin/opam env
      whereis opam
    displayName: 'Setup environment'

  - script: |
      sudo apt-get install m4 pkg-config -y
    displayName: 'System dependencies'

  - bash: |
      opam install ocamlformat -y
    displayName: 'Ocamlformat'

  - bash: |
      eval $(opam env)
      make rule-check
    displayName: 'Rule check'

  - bash: |
      case $AGENT_OS in
        "Linux") sudo apt-get install libpq-dev sqlite3 libsqlite3-dev -y &&
                 sudo psql --host=postgres --username=postgres --command="CREATE DATABASE links" ;;
        "Darwin") brew install postgresql libpq sqlite3 &&
                  pg_ctl -D /usr/local/var/postgres start &&
                  sleep 5 &&
                  /usr/local/opt/postgres/bin/createdb -O $(whoami) links ;;
        *) exit 1 ;;
      esac
      cat >tests/database/config <<-EOF
        database_driver=postgresql
        database_args=postgres:5432:postgres:
        show_pre_sugar_typing=off
      EOF
    displayName: 'Databases'

  - bash: |
      eval $(opam env)
      opam pin add links . -y
      opam pin add links-postgresql . -y
      opam pin add links-sqlite3 . -y
    displayName: 'Links dependencies'

  - script: |
      eval $(opam env)
      make all-release
    displayName: 'Build Links (release)'

  - script: |
      eval $(opam env)
      make tests
    displayName: 'Server-side tests'

  - script: |
      eval $(opam env)
      ./run-tests db-only shredding
    displayName: 'Database shredding tests'

  - script: |
      eval $(opam env)
      ./run-tests db-only relational-lenses
    displayName: 'Relational lenses tests'

  - script: |
      eval $(opam env)
      opam install -y oUnit
      ./run-tests unit
    displayName: 'Unit tests'
